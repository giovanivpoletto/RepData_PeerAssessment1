DT$html_url
DT$created_at[5]
q()
library(lattice)
q()
library(lattice)
xyplot()
bwplot
bwplot()
xyplot
library(datasets)
?xyplot
library(lattice)
?lpoints
?points
setwd("~/04-cursos/01-data-scientist/09-reproducible-research/02-workspace/RepData_PeerAssessment1")
rawactivity <- read.csv(unzip("activity.zip"))
rawactivity$date <- as.Date(rawactivity$date, "%Y-%m-%d")
cleandata <- rawactivity[complete.cases(rawactivity),]
datevector <- unique(as.Date(cleandata$date, "%Y-%m-%d"))
totalsteps <- vector()
datetotalsteps <- vector()
index <- 1
for (i in 1:length(datevector)){
if (is.na(sum(cleandata[cleandata[, "date"] ==  eval(datevector[i]),][,1])) == FALSE){
totalsteps[index] <- sum(cleandata[cleandata[, "date"] ==  eval(datevector[i]),][,1])
datetotalsteps[index] <- as.character(datevector[i])
index <- index + 1
}
}
sumdata <- data.frame(date=as.Date(datetotalsteps, "%Y-%m-%d"), total.steps=totalsteps, stringsAsFactors = FALSE)
plot(sumdata, type = "h", main = "Total number of steps taken each day")
qplot(total.steps, date, data=sumdata, geom="histogram", binwidth=3)
library(ggplot2)
qplot(total.steps, date, data=sumdata, geom="histogram", binwidth=3)
qplot(total.steps, data=sumdata, geom="histogram", binwidth=3)
rawactivity[rawactivity[, "date"] ==  "2012-10-01",][1,1]
rawactivity[rawactivity[, "date"] ==  "2012-10-01",][,1]
is.na(rawactivity[rawactivity[, "date"] ==  eval(datevector[i]),][,1]) == FALSE
rawactivity[rawactivity[, "date"] ==  "2012-10-02",][,1]
stepsperday <- vector()
sumsteps <- 0
sumstepsperday <- vector()
mediantotalsteps <- vector()
mediandatetotalsteps <- vector()
countmeasure <- 0
countmeasurestepsperday <- vector()
index <- 1
indexsteps <- 1
for (i in 1:length(datevector)){
if (is.na(rawactivity[rawactivity[, "date"] ==  eval(datevector[i]),][,1]) == FALSE){
stepsperday <-  rawactivity[rawactivity[, "date"] ==  eval(datevector[i]),][,1]
for (j in 1:length(stepsperday)) {
if (stepsperday[j] > 0){
sumsteps <- sumsteps + stepsperday
countmeasure <- countmeasure + 1
}
}
mediantotalsteps[index] <- sumsteps / countmeasure
mediandatetotalsteps[index] <- as.character(datevector[i])
countmeasurestepsperday[index] <- countmeasure
sumstepsperday[index] <- sumsteps
index <- index + 1
}
}
warnings()
stepsperday <- vector()
sumsteps <- 0
sumstepsperday <- vector()
mediantotalsteps <- vector()
mediandatetotalsteps <- vector()
countmeasure <- 0
countmeasurestepsperday <- vector()
index <- 1
indexsteps <- 1
is.na(rawactivity[rawactivity[, "date"] ==  eval(datevector[i]),][,1]) == FALSE
is.na(cleandata[cleandata[, "date"] ==  eval(datevector[i]),][,1]) == FALSE
stepsperday <-  cleandata[cleandata[, "date"] ==  eval(datevector[i]),][,1]
for (j in 1:length(stepsperday)) {
if (stepsperday[j] > 0){
sumsteps <- sumsteps + stepsperday
countmeasure <- countmeasure + 1
}
}
sumsteps
countmeasure
for (j in 1:length(stepsperday)) {
if (stepsperday[j] > 0){
sumsteps <- sum(sumsteps, stepsperday)
countmeasure <- countmeasure + 1
}
}
sumsteps
?sum()
for (j in 1:length(stepsperday)) {
if (stepsperday[j] > 0){
sumsteps <- sumsteps + stepsperday[j]
countmeasure <- countmeasure + 1
}
}
sumsteps
sumsteps <- 0
countmeasure <- 0
stepsperday <- vector()
sumsteps <- 0
sumstepsperday <- vector()
mediantotalsteps <- vector()
mediandatetotalsteps <- vector()
countmeasure <- 0
countmeasurestepsperday <- vector()
index <- 1
indexsteps <- 1
for (i in 1:length(datevector)){
if (is.na(cleandata[cleandata[, "date"] ==  eval(datevector[i]),][,1]) == FALSE){
stepsperday <-  cleandata[cleandata[, "date"] ==  eval(datevector[i]),][,1]
for (j in 1:length(stepsperday)) {
if (stepsperday[j] > 0){
sumsteps <- sumsteps + stepsperday[j]
countmeasure <- countmeasure + 1
}
}
mediantotalsteps[index] <- sumsteps / countmeasure
mediandatetotalsteps[index] <- as.character(datevector[i])
countmeasurestepsperday[index] <- countmeasure
sumstepsperday[index] <- sumsteps
index <- index + 1
}
}
warnings()
head(cleandata)
is.na(cleandata$steps)
is.na(rawactivity$steps)
stepsperday <- vector()
sumsteps <- 0
sumstepsperday <- vector()
mediantotalsteps <- vector()
mediandatetotalsteps <- vector()
countmeasure <- 0
countmeasurestepsperday <- vector()
index <- 1
indexsteps <- 1
for (i in 1:length(datevector)){
stepsperday <-  cleandata[cleandata[, "date"] ==  eval(datevector[i]),][,1]
for (j in 1:length(stepsperday)) {
if (stepsperday[j] > 0){
sumsteps <- sumsteps + stepsperday[j]
countmeasure <- countmeasure + 1
}
}
mediantotalsteps[index] <- sumsteps / countmeasure
mediandatetotalsteps[index] <- as.character(datevector[i])
countmeasurestepsperday[index] <- countmeasure
sumstepsperday[index] <- sumsteps
index <- index + 1
}
mediantotalsteps
plot(mediantotalsteps,mediandatetotalsteps)
plot(mediantotalsteps)
plot(mediandatetotalsteps)
mediandatetotalsteps
class(mediandatetotalsteps)
medianstepsperday <- data.frame(date=as.Date(datetotalsteps, "%Y-%m-%d"), median=mediantotalsteps, total.steps=sumstepsperday, countmeasure=countmeasurestepsperday, stringsAsFactors = FALSE)
head(medianstepsperday)
stepsperday <- vector()
sumstepsperday <- vector()
mediantotalsteps <- vector()
mediandatetotalsteps <- vector()
countmeasurestepsperday <- vector()
index <- 1
indexsteps <- 1
for (i in 1:length(datevector)){
stepsperday <-  cleandata[cleandata[, "date"] ==  eval(datevector[i]),][,1]
countmeasure <- 0
sumsteps <- 0
for (j in 1:length(stepsperday)) {
if (stepsperday[j] > 0){
sumsteps <- sumsteps + stepsperday[j]
countmeasure <- countmeasure + 1
}
}
mediantotalsteps[index] <- sumsteps / countmeasure
mediandatetotalsteps[index] <- as.character(datevector[i])
countmeasurestepsperday[index] <- countmeasure
sumstepsperday[index] <- sumsteps
index <- index + 1
}
medianstepsperday <- data.frame(date=as.Date(datetotalsteps, "%Y-%m-%d"), median=mediantotalsteps, total.steps=sumstepsperday, countmeasure=countmeasurestepsperday, stringsAsFactors = FALSE)
head(medianstepsperday)
qplot(medianstepsperday)
qplot(medianstepsperday$median, medianstepsperday$date)
qplot(medianstepsperday$date, medianstepsperday$median)
qplot(medianstepsperday$date, medianstepsperday$median, geom)
qplot(medianstepsperday$date, medianstepsperday$median, smooth)
qplot(medianstepsperday$date, medianstepsperday$median, geom="smooth")
t <- qplot(medianstepsperday$date, medianstepsperday$median)
t + geom_smooth
t
meantotalsteps <- vector()
datetotalsteps <- vector()
index <- 1
for (i in 1:length(datevector)){
if (is.na(mean(cleandata[cleandata[, "date"] ==  eval(datevector[i]),][,1])) == FALSE){
meantotalsteps[index] <- mean(cleandata[cleandata[, "date"] ==  eval(datevector[i]),][,1])
datetotalsteps[index] <- as.character(datevector[i])
index <- index + 1
}
}
meandata <- data.frame(date=as.Date(datetotalsteps, "%Y-%m-%d"), mean=meantotalsteps, stringsAsFactors = FALSE)
## median
stepsperday <- vector()
sumstepsperday <- vector()
mediantotalsteps <- vector()
mediandatetotalsteps <- vector()
countmeasurestepsperday <- vector()
index <- 1
indexsteps <- 1
for (i in 1:length(datevector)){
stepsperday <-  cleandata[cleandata[, "date"] ==  eval(datevector[i]),][,1]
countmeasure <- 0
sumsteps <- 0
for (j in 1:length(stepsperday)) {
if (stepsperday[j] > 0){
sumsteps <- sumsteps + stepsperday[j]
countmeasure <- countmeasure + 1
}
}
mediantotalsteps[index] <- sumsteps / countmeasure
mediandatetotalsteps[index] <- as.character(datevector[i])
countmeasurestepsperday[index] <- countmeasure
sumstepsperday[index] <- sumsteps
index <- index + 1
}
medianstepsperday <- data.frame(date=as.Date(datetotalsteps, "%Y-%m-%d"), median=mediantotalsteps, stringsAsFactors = FALSE)
if (is.na(mean(rawactivity[rawactivity[, "date"] ==  eval(datevector[i]),][,1])) == FALSE){
mediantotalsteps[index] <- median(rawactivity[rawactivity[, "date"] ==  eval(datevector[i]),][,1])
datetotalsteps[index] <- as.character(datevector[i])
index <- index + 1
}
mediandata <- data.frame(date=as.Date(datetotalsteps, "%Y-%m-%d"), median=mediantotalsteps, stringsAsFactors = FALSE)
meanmedianperday <- merge(mediandata, meandata, intersect(mediandata, meandata))
intersect(meandata,mediandata)
intersect(meandata,mediandatetotalsteps)
medianstepsperday
intersect(meandata,medianstepsperday)
reportmeanmedian <- merge(meandata, medianstepsperday)
head(reportmeanmedian)
qplot(mean, media, data=reportmeanmedian, facets=.~date)
qplot(mean, median, data=reportmeanmedian, facets=.~date)
qplot(date, data=reportmeanmedian, facets= mean ~ median)
reportmeanmedian
?plot
head(cleandata)
head(cleandata,10)
head(cleandata,50)
cleandata[cleandata [, "interval"] == 5, ]
unique(cleandata$interval)
intervalvector <- unique(cleandata$interval)
class(intervalvector)
cleandata[cleandata[, "interval"] ==  eval(intervalvector[1]),][,1]
stepsperinterval <- vector()
sumstepsperinterval <- vector()
mediantotalsteps <- vector()
mediandatetotalsteps <- vector()
countmeasurestepsperinterval <- vector()
index <- 1
indexsteps <- 1
intervalvector <- unique(cleandata$interval)
for (i in 1:length(datevector)){
}
stepsperinterval <- vector()
sumstepsperinterval <- vector()
mediantotalsteps <- vector()
mediandatetotalsteps <- vector()
countmeasurestepsperinterval <- vector()
index <- 1
indexsteps <- 1
intervalvector <- unique(cleandata$interval)
for (i in 1:length(intervalvector)){
stepsperinterval <-  cleandata[cleandata[, "interval"] ==  eval(intervalvector[i]),][,1]
countmeasure <- 0
sumsteps <- 0
for (j in 1:length(stepsperinterval)) {
if (stepsperinterval[j] > 0){
sumsteps <- sumsteps + stepsperinterval[j]
countmeasure <- countmeasure + 1
}
}
mediantotalsteps[index] <- sumsteps / countmeasure
mediandatetotalsteps[index] <- as.character(intervalvector[i])
countmeasurestepsperinterval[index] <- countmeasure
sumstepsperinterval[index] <- sumsteps
index <- index + 1
}
mediantotalsteps
is.na(cleandata$interval)
mediantotalsteps
intervalvector
stepsperinterval <- vector()
sumstepsperinterval <- vector()
mediantotalsteps <- vector()
mediandatetotalsteps <- vector()
countmeasurestepsperinterval <- vector()
index <- 1
indexsteps <- 1
intervalvector <- unique(cleandata$interval)
for (i in 1:length(intervalvector)){
stepsperinterval <-  cleandata[cleandata[, "interval"] ==  eval(intervalvector[i]),][,3]
countmeasure <- 0
sumsteps <- 0
for (j in 1:length(stepsperinterval)) {
if (stepsperinterval[j] > 0){
sumsteps <- sumsteps + stepsperinterval[j]
countmeasure <- countmeasure + 1
}
}
mediantotalsteps[index] <- sumsteps / countmeasure
mediandatetotalsteps[index] <- as.character(intervalvector[i])
countmeasurestepsperinterval[index] <- countmeasure
sumstepsperinterval[index] <- sumsteps
index <- index + 1
}
mediantotalsteps
stepsperinterval <- vector()
sumstepsperinterval <- vector()
mediantotalsteps <- vector()
mediandatetotalsteps <- vector()
countmeasurestepsperinterval <- vector()
index <- 1
indexsteps <- 1
intervalvector <- unique(cleandata$interval)
for (i in 1:length(intervalvector)){
stepsperinterval <-  cleandata[cleandata[, "interval"] ==  eval(intervalvector[i]),][,1]
countmeasure <- 0
sumsteps <- 0
for (j in 1:length(stepsperinterval)) {
if (stepsperinterval[j] > 0){
sumsteps <- sumsteps + stepsperinterval[j]
countmeasure <- countmeasure + 1
}
}
mediantotalsteps[index] <- sumsteps / countmeasure
mediandatetotalsteps[index] <- as.character(intervalvector[i])
countmeasurestepsperinterval[index] <- countmeasure
sumstepsperinterval[index] <- sumsteps
index <- index + 1
}
mediantotalsteps
length(stepsperinterval)
length(meantotalsteps)
sumsteps
intervalvector[8]
stepsperinterval <- vector()
sumstepsperinterval <- vector()
mediantotalsteps <- vector()
mediandatetotalsteps <- vector()
countmeasurestepsperinterval <- vector()
index <- 1
indexsteps <- 1
intervalvector <- unique(cleandata$interval)
i <- 8
stepsperinterval <-  cleandata[cleandata[, "interval"] ==  eval(intervalvector[i]),][,1]
countmeasure <- 0
sumsteps <- 0
stepsperinterval
for (j in 1:length(stepsperinterval)) {
if (stepsperinterval[j] > 0){
sumsteps <- sumsteps + stepsperinterval[j]
countmeasure <- countmeasure + 1
}
}
mediantotalsteps[index] <- sumsteps / countmeasure
mediantotalsteps
medianintervaltotalsteps[index] <- as.character(intervalvector[i])
date
mediandatetotalsteps[index] <- as.character(intervalvector[i])
countmeasurestepsperinterval[index] <- countmeasure
sumstepsperinterval[index] <- sumsteps
index <- index + 1
mediandatetotalsteps
sumsteps
countmeasure
length(intervalvector)
stepsperinterval
stepsperinterval[j]
sumstepsperinterval
stepsperinterval <- vector()
sumstepsperinterval <- vector()
mediantotalsteps <- vector()
mediandatetotalsteps <- vector()
countmeasurestepsperinterval <- vector()
index <- 1
indexsteps <- 1
intervalvector <- unique(cleandata$interval)
for (i in 1:length(intervalvector)){
stepsperinterval <-  cleandata[cleandata[, "interval"] ==  eval(intervalvector[i]),][,1]
countmeasure <- 0
sumsteps <- 0
for (j in 1:length(stepsperinterval)) {
if (stepsperinterval[j] > 0){
sumsteps <- sumsteps + stepsperinterval[j]
countmeasure <- countmeasure + 1
}
}
mediantotalsteps[index] <- sumsteps / countmeasure
mediandatetotalsteps[index] <- intervalvector[i]
countmeasurestepsperinterval[index] <- countmeasure
sumstepsperinterval[index] <- sumsteps
index <- index + 1
}
mediantotalsteps
mediandatetotalsteps
countmeasurestepsperinterval
sumstepsperinterval
stepsperinterval <- vector()
sumstepsperinterval <- vector()
mediantotalsteps <- vector()
mediandatetotalsteps <- vector()
countmeasurestepsperinterval <- vector()
index <- 1
indexsteps <- 1
intervalvector <- unique(cleandata$interval)
for (i in 1:length(intervalvector)){
stepsperinterval <-  cleandata[cleandata[, "interval"] ==  eval(intervalvector[i]),][,1]
countmeasure <- 0
sumsteps <- 0
for (j in 1:length(stepsperinterval)) {
if (stepsperinterval[j] > 0){
sumsteps <- sumsteps + stepsperinterval[j]
countmeasure <- countmeasure + 1
}
}
if (countmeasure = 0){
mediantotalsteps[index] <- countmeasure
}else{
mediantotalsteps[index] <- sumsteps / countmeasure
}
mediandatetotalsteps[index] <- intervalvector[i]
countmeasurestepsperinterval[index] <- countmeasure
sumstepsperinterval[index] <- sumsteps
index <- index + 1
}
stepsperinterval <- vector()
sumstepsperinterval <- vector()
mediantotalsteps <- vector()
mediandatetotalsteps <- vector()
countmeasurestepsperinterval <- vector()
index <- 1
indexsteps <- 1
intervalvector <- unique(cleandata$interval)
for (i in 1:length(intervalvector)){
stepsperinterval <-  cleandata[cleandata[, "interval"] ==  eval(intervalvector[i]),][,1]
countmeasure <- 0
sumsteps <- 0
for (j in 1:length(stepsperinterval)) {
if (stepsperinterval[j] > 0){
sumsteps <- sumsteps + stepsperinterval[j]
countmeasure <- countmeasure + 1
}
}
if (countmeasure == 0) {
mediantotalsteps[index] <- countmeasure
}else{
mediantotalsteps[index] <- sumsteps / countmeasure
}
mediandatetotalsteps[index] <- intervalvector[i]
countmeasurestepsperinterval[index] <- countmeasure
sumstepsperinterval[index] <- sumsteps
index <- index + 1
}
mediantotalsteps
mediandatetotalsteps
plot(intervalvector,mediantotalsteps, type ="l")
plot(mediandatetotalsteps,mediantotalsteps, type ="l")
datasteps <- data.frame(median.steps=mediantotalsteps, interval=intervalvector, stringsAsFactors = FALSE)
maxsteps <- datasteps[order(datasteps$median.steps, na.last = NA),]
maxsteps
?order()
maxsteps <- datasteps[order(datasteps$median.steps, na.last = NA, decreasing = TRUE),]
maxsteps
head(maxsteps)
head(maxsteps,1)
head(maxsteps,1)[,2]
rawactivity[is.na(rawactivity[rawactivity[, "date"] == "2012-10-01", ])]
rawactivity[is.na(rawactivity[, "date"] == "2012-10-01", ])]
rawactivity[is.na(rawactivity[, "date"] == "2012-10-01", ])
is.na(rawactivity[, "date"] == "2012-10-01", ])
is.na(rawactivity[rawactivity[, "date"] == "2012-10-01", ])
is.na(rawactivity[rawactivity[, "date"] == "2012-10-01", ])[,1]
nrow(is.na(rawactivity[rawactivity[, "date"] == "2012-10-01", ])[,1])
rawactivity$steps[is.na(rawactivity[rawactivity[, "date"] == "2012-10-01", ])]
is.na(rawactivity[rawactivity[, "date"] == "2012-10-01", ])
summary(rawactivity)
tail(summary(rawactivity),1)
tail(summary(rawactivity),1)[,1]
datetotalsteps <- vector()
index <- 1
for (i in 1:length(datevector)){
meantotalsteps[index] <- mean(rawactivity[rawactivity[, "date"] ==  eval(datevector[i]),][,1])
datetotalsteps[index] <- as.character(datevector[i])
meantotalsteps <- vector()
datetotalsteps <- vector()
index <- 1
for (i in 1:length(datevector)){
meantotalsteps[index] <- mean(rawactivity[rawactivity[, "date"] ==  eval(datevector[i]),][,1])
datetotalsteps[index] <- as.character(datevector[i])
index <- index + 1
}
##Create a new dataset that is equal to the original dataset but with the missing data filled in.
meandata <- data.frame(date=as.Date(datetotalsteps, "%Y-%m-%d"), mean=meantotalsteps, stringsAsFactors = FALSE)
##Make a histogram of the total number of steps taken each day and Calculate and report the mean and median total number of steps taken per day. Do these values differ from the estimates from the first part of the assignment? What is the impact of imputing missing data on the estimates of the total daily number of steps?
}
##Create a new dataset that is equal to the original dataset but with the missing data filled in.
